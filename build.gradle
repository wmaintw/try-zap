apply plugin: "java"
apply plugin: "idea"

apply plugin: "security-zap"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(
                'com.thoughtworks.tools:security-zap:1.0.4'
        )
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile(
            'junit:junit:4.9',
            'org.seleniumhq.selenium:selenium-java:2.45.0'
    )
}

sourceSets {
    test {
        resources {
            srcDir 'src/test/resources'
        }
    }
}

test {
    // required, pass zap.proxy system property to test due to the feature of gradle
    systemProperty 'zap.proxy', System.properties['zap.proxy']
}

zap {
    server {
        // required, absolute path to the ZAP install folder
        home = "/Users/wma/Downloads/security/zap-for-linux/ZAP_2.3.1/"

        // optional, apikey which will be used to perform zap actions, if not provided, the plugin will generate a default apikey
        apiKey = "123456"

        // optional, the host name that the ZAP should listen on, default to 127.0.0.1
        host = "localhost"

        // optional, the port number that the ZAP should listen on, default to 7070
        port = 7070
    }

    target {
        // required, the website to be tested against ZAP
        url = "http://localhost:8080/WebGoat"

        // optional, urls match these rege will be ignored from ZAP, default to no exclusion
        exclude = ['.*/css/.*', '.*/js/.*', '.*/fonts/.*', ".*\\.css", ".*\\.js"]
    }

    scan {
        // optional, before scan, ZAP will crawl from here first, default to zap.target.url
        crawlFrom = "http://localhost:8080/WebGoat"

        // optional, urls match these regex will be ignored from scan, default to no exclusion
        exclude = ['.*/css/.*', '.*/js/.*', '.*/fonts/.*', ".*\\.css", ".*\\.js"]

        // optional, it might take one or two hours to finish the scan, set your timeout threshold from here, in minutes, default to 60 mins
        timeout = 60

        // number of hosts scanned concurrently, valid from 1 to 5, default to 2
        hostPerScan = 2

        // concurrent scanning threads per host, valid from 1 to 50, default to 2
        threadPerHost = 10
    }
}